#! /bin/sh
folder="$( cd "$( dirname "$(readlink -f "$0")" )" && pwd )"
cd ${folder}
. ${folder}/../scripts/.bash_aliases

image="kv:5000/b2d/mcron:1.0.8"

sshd_cont="sshd.cont"
mcron_shippingbay_cont="mcron.shippingbay.cont"

if [ "${1}" != "" ]; then
	sshd_cont="sshd.${1}.cont"
	mcron_shippingbay_cont="mcron.shippingbay.${1}.cont"
fi

ec=$(docker inspect -f '{{ .State.Running }}' ${sshd_cont} 2> /dev/null)
if [ "${ec}" = "false" ]; then
	docker rm ${sshd_cont}
fi

if [ "${1}" = "bash" ]; then
	cd $HOME/b2d/mcron
	./run
	cd $HOME/b2d/sshd
	docker inspect sshd.bash.cont > /dev/null 2>&1 && if [ "$(din -f '{{.State.ExitCode}}' sshd.bash.cont)" != "0" ]; then
		d rm sshd.bash.cont
	fi
	mcron_shippingbay_cont="mcron.shippingbay.cont"
	docker create -it --name sshd.bash.cont -v ${mcron_shippingbay_cont}:/home/git/shippingbay_git ${image}
	docker start sshd.bash.cont
	docker exec -it sshd.bash.cont /bin/bash
	docker inspect sshd.bash.cont > /dev/null 2>&1 && docker stop sshd.bash.cont
	docker inspect sshd.bash.cont > /dev/null 2>&1 && docker rm sshd.bash.cont
	docker volume rm mcron.shippingbay.bash.cont
	cd $HOME/b2d/mcron
	k all
	cd $HOME/b2d/sshd
fi


if [ "${1}" != "external" ]; then
	exit 0
fi

cd $HOME/b2d/mcron
./run external
cd $HOME/b2d/sshd

docker volume ls ${mcron_shippingbay_cont} > /dev/null 2>&1 || { echo "${sshd_cont}/run: volume ${mcron_shippingbay_cont} not created"; exit 1; }

docker inspect ${sshd_cont} > /dev/null 2>&1 && if [ "$(din -f '{{.State.ExitCode}}' ${sshd_cont})" != "0" ]; then
	d rm ${sshd_cont}
fi
docker inspect ${sshd_cont} > /dev/null 2>&1 && exit 0

docker create -it --name ${sshd_cont} - ${mcron_shippingbay_cont}:/home/git/shippingbay_git ${image}
docker cp ${sshd_cont}:/home/git/.ssh/root "$(readlink -f $HOME/b2d)/sshd" || exit 1
docker cp ${sshd_cont}:/home/git/.ssh/root.pub "$(readlink -f $HOME/b2d)/sshd" || exit 1
chmod 644 root
chmod 644 root.pub
docker start ${sshd_cont}
