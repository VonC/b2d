#! /bin/sh
. ../.bash_aliases
if [ "${1}" != "bash" ]; then
	cd $HOME/b2d/gitolite
	./run $1
	cd $HOME/b2d/gnupg2
	./run $1
fi
cd $HOME/b2d/openldap
./run $1
cd $HOME/b2d/apache

if [ "${1}" = "bash" ]; then
	cd $HOME/b2d/gitolite
	./run
	cd $HOME/b2d/gnupg2
	./run
	cd $HOME/b2d/apache
	docker create -it --name apache.bash.cont --volumes-from gitolite.repos.cont --volumes-from gitolite.cont --volumes-from gnupg2.cont apache bash
	docker cp "$HOME/b2d/envs/.envs.example.private" apache.bash.cont:/home/git/.envs.private
	docker cp apache.bash.cont:/home/git/apache/localhost.crt "$(readlink -f $HOME/b2d)/apache/apache.bash.crt" || exit 1
	docker start -a -i apache.bash.cont
	exit 0
fi

apache_cont="apache.cont"
apache_openldap_cont="apache.openldap.cont"
gitolite_cont="gitolite.cont"
gitolite_repos_cont="gitolite.repos.cont"
gnupg2_cont="gnupg2.cont"
envs_cnf="envs.cnf"
envs_private=".envs.example.private"
crt="crt"

if [ "${1}" != "" ]; then
	apache_cont="apache.${1}.cont"
	gitolite_cont="gitolite.${1}.cont"
	gitolite_repos_cont="gitolite.repos.${1}.cont"
	gnupg2_cont="gnupg2.${1}.cont"
	envs_cnf="envs.${1}.cnf"
	envs_private=".envs.${1}.private"
	crt="apache.${1}.crt"
fi

port_gitweb=$(sed -n "s#^\s*@PORT_HTTP_GITWEB@\s*=\s*##p" ../envs/${envs_cnf})
if [ "${port_gitweb}" = "" ]; then echo "missing @PORT_HTTP_GITWEB@ in '$HOME/b2d/envs/${envs_cnf}'"; exit 0; fi
port_hgit=$(sed -n "s#^\s*@PORT_HTTP_HGIT@\s*=\s*##p" ../envs/${envs_cnf})
if [ "${port_hgit}" = "" ]; then echo "missing @PORT_HTTP_HGIT@ in '$HOME/b2d/envs/${envs_cnf}'"; exit 0; fi

docker inspect ${apache_cont} > /dev/null 2>&1 && if [ "$(din -f '{{.State.ExitCode}}' ${apache_cont})" != "0" ]; then
	d rm ${apache_cont}
fi
docker inspect ${apache_cont} > /dev/null 2>&1 && exit 0

docker inspect "openldap.cont" > /dev/null 2>&1 || { echo "${apache_cont}/run: openldap.cont not started"; exit 1; }
docker inspect ${gitolite_repos_cont} > /dev/null 2>&1 || { echo "${apache_cont}/run: gitolite_repos_cont: '${gitolite_repos_cont}' not created"; exit 1; }
docker inspect ${gitolite_cont} > /dev/null 2>&1 || { echo "${apache_cont}/run: gitolite_cont: '${gitolite_cont}' not created"; exit 1; }

alias drapache="docker run -it -d --name ${apache_cont} -p ${port_gitweb}:8543 -p ${port_hgit}:8553 --link openldap.cont:apache.openldap.cont --volumes-from ${gitolite_repos_cont} --volumes-from ${gitolite_cont} --volumes-from ${gnupg2_cont}"

if [ -z "${upstream}" ] && [ -z "${downstream}" ]; then
	drapache apache
	docker cp "$HOME/b2d/envs/${envs_private}" ${apache_cont}:/home/git/.envs.private
	docker cp ${apache_cont}:/home/git/apache/localhost.crt "$(readlink -f $HOME/b2d)/apache/${crt}"
	exit 0
fi

if [ ! -z "${upstream}" ] && [ -z "${downstream}" ]; then
	docker inspect apache.${upstream}.cont > /dev/null 2>&1 || { echo "${apache_cont}/run: apache.upstream.cont: 'apache.${upstream}.cont' not started"; exit 1; }
	drapache --link apache.${upstream}.cont:apache.upstream.cont apache
	docker cp "$HOME/b2d/apache/apache.${upstream}.crt" ${apache_cont}:/home/git/apache/apache.upstream.crt
	docker cp "$HOME/b2d/envs/${envs_private}" ${apache_cont}:/home/git/.envs.private
	docker cp ${apache_cont}:/home/git/apache/localhost.crt "$(readlink -f $HOME/b2d)/apache/${crt}"
	docker exec ${apache_cont} update_curl-ca-bundle
	exit 0
fi

if [ -z "${upstream}" ] && [ ! -z "${downstream}" ]; then
	docker inspect apache.${downstream}.cont > /dev/null 2>&1 || { echo "${apache_cont}/run: apache.downstream.cont: 'apache.${downstream}.cont' not started"; exit 1; }
	drapache --link apache.${downstream}.cont:apache.downstream.cont apache
	docker cp "$HOME/b2d/apache/apache.${downstream}.crt" ${apache_cont}:/home/git/apache/apache.downstream.crt
	docker cp "$HOME/b2d/envs/${envs_private}" ${apache_cont}:/home/git/.envs.private
	docker cp ${apache_cont}:/home/git/apache/localhost.crt "$(readlink -f $HOME/b2d)/apache/${crt}"
	docker exec ${apache_cont} update_curl-ca-bundle
	exit 0
fi

# if [ -z "${upstream} "] && [ -z "${downstream}" ]; then not possible yet with docker 1.8.1
echo "apache/run: upstream and downstream not supported"
