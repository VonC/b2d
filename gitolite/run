#! /bin/sh
. ../.bash_aliases

if [ "${1}" == "bash" ]; then
	docker inspect gitolite.repos.test.cont > /dev/null 2>&1 || docker create --name="gitolite.repos.test.cont" gitolite.repos /bin/true
	docker run -it --rm  --name gitolite.test --volumes-from gitolite.repos.test.cont gitolite bash
	docker inspect gitolite.repos.test.cont > /dev/null 2>&1 && docker rm gitolite.repos.test.cont
	exit 0
fi

gitolite_cont="gitolite.cont"
gitolite_repos_cont="gitolite.repos.cont"
grepos="grepos"

if [[ "${1}" != "" ]]; then
	gitolite_cont="gitolite.${1}.cont"
	gitolite_repos_cont="gitolite.repos.${1}.cont"
	grepos="grepos.${1}"
fi

docker inspect ${gitolite_repos_cont} > /dev/null 2>&1 || docker create --name="${gitolite_repos_cont}" gitolite.repos /bin/true

. ../updateDataContainerPath
updatePath ${gitolite_repos_cont} "$HOME/b2d/gitolite" ${grepos}

fgrpath=$(cat $HOME/b2d/gitolite/${grepos})
[ ! -z "${verbose}" ] && echo "test '${fgrpath}'"

empty=$(sudo ls ${fgrpath} 2> /dev/null)
if [ "${empty}" = "" ] ; then
	echo "empty folder '${fgrpath}'"
    docker rm gitolite.setup.cont 2> /dev/null
    docker run -it --rm --name gitolite.setup.cont --volumes-from ${gitolite_repos_cont} gitolite "USER=git GITOLITE_HTTP_HOME= /home/git/gitolite/bin/gitolite setup -pk /home/git/.ssh/gitoliteadm.pub"
else
	[ ! -z "${verbose}" ] && echo "NOT empty folder '${fgrpath}'"
fi

remote=$(sudo ls ${fgrpath}/.init_envs.sh 2> /dev/null)
if [ "${remote}" = "" ] || [ ! -z "${force_init_env}" ]; then
	echo "Remote is NOT defined for '${1}'"
    docker rm gitolite.setup.cont 2> /dev/null
    envs=".envs.example.private"
    if [ "${1}" != "" ]; then envs=".envs.${1}.private"; fi
	echo "use '$HOME/b2d/envs/${envs}'"
	[ ! -z "${verbose}" ] && echo "docker run -it --rm --name gitolite.setup.cont -v $HOME/b2d/envs/${envs}:/home/git/.envs.private --volumes-from ${gitolite_repos_cont} gitolite"
    docker run -it --rm --name gitolite.setup.cont -v $HOME/b2d/envs/${envs}:/home/git/.envs.private --volumes-from ${gitolite_repos_cont} gitolite init_envs.sh
    sudo touch ${fgrpath}/.init_envs.sh
else
	[ ! -z "${verbose}" ] && echo "Remote is defined for gitolite-admin in '${1}': '${remote}'"
fi

docker inspect ${gitolite_cont} > /dev/null 2>&1 || docker create --name="${gitolite_cont}" gitolite
