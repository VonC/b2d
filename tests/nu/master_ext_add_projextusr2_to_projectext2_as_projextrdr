#!/bin/sh

run() {
	set -e
	. tests/b/utils
	pcrt=$(readlink -f ./apache/crts)
	cd tests/newusers/gitolite-admin-ext_as_projextdr
	pwd
	git_config 6443 "${pcrt}" "projextadm2"
	if [ ! -e .git/refs/heads/master_ext ]; then
		echo "no master_ext branch found">> tests/err
		return 1
	fi
	git checkout master_ext &2>/dev/null
	gconf="conf/gitolite.conf"
	git reset ${gconf}

	if [ ${reset} -eq 0 ]; then
		echo "resetting to 'Add new repo module2 to projectext2 group'"
		check=$(git log --format=format:%H --grep "Add new repo module2 to projectext2 group$" master_ext)
		if [ "check" = "" ]; then
			echo "Impossible to reset: 'Add new repo module2 to projectext2 group$' not found" >> ${dirp0}/tests/err
			return -1
		fi
		git reset --hard ${check}
	fi

	set +e
	check=$(git branch --no-color --contains "origin/master_ext" | grep -e " master_ext$" 2>&1)
	if [ "${check}" = "" ]; then
		echo "must reset origin/master_ext"
		git push -f origin master_ext
	fi
	set -e

	pconf="conf/subs/projectext2.conf"
	if [ ! -e "${pconf}" ]; then
		mkdir -p conf/subs
		echo "repo @projectext2
RW+     = projextadm2
" > "${pconf}"
		git add "${pconf}"
	fi

	append_one "RW\s\+=\s\+projextusr2" "${pconf}" "                RW      = projextusr2"
	if [ ${append} -lt 0 ]; then
		echo "Incorrect number of projextusr2 in '${pconf}'">> ${dirp0}/tests/err
		return -1
	fi
	if [ ${append} -eq 0 ]; then
		git_status_diff_add_commit_log "${pconf}" "Add projextusr2 to projectext2 as projextrdr for projextadm2"
	fi
	echo "dirp0='${dirp0}' vs. pcrt='${pcrt}'"
	check_if_pushed "origin" "[Aa]dd projextusr2 to projectext2 as projextrdr for projextadm2$" "master_ext"
	if [ "${check}" = "" ]; then
		echo "no commit 'Add projextusr2 to projectext2 as projextrdr for projextadm2'">> ${dirp0}/tests/err
		return 1
	fi
}
