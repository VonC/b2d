#!/bin/sh

run() {
	set -e
	if [ ! -e tests/newcommits/module2_as_projusr2 ]; then
		git -c http.https://localhost:6443/.sslCAInfo=${dirp0}/apache/crts -c credential.helper=passwd clone https://projusr2@localhost:6443/hgit/module2 tests/newcommits/module2_as_projusr2
	fi
	. tests/utils
	pcrt=$(readlink -f ./apache/crts)
	cd tests/newcommits/module2_as_projusr2
	pwd
	# echo "git config http.https://localhost:6443/.sslCAInfo ${pcrt}"
	git_config 6443 "${pcrt}" projusr2
	git ls-remote origin
	git remote -v

	if [ ! -e .git/refs/heads/master ]; then
		git commit --allow-empty -m "First commit as projusr2 on master"
	fi
	if [ ${reset} -eq 0 ]; then
		git checkout --orphan nmaster
		git commit --allow-empty -m "First commit as projusr2 on master"
		git branch -D master
		git branch -M nmaster master
	fi
	set +e; check=$(git branch --no-color | grep -e " master_ext$" 2>&1); set -e
	if [ "${check}" = "" ]; then
		git checkout -b master_ext
	else
		git checkout master_ext
	fi
	if [ ${reset} -eq 0 ]; then
		git reset --hard master
	fi
	# git commit --amend --allow-empty --no-edit
	if [ -e .git/refs/remotes/origin/master_ext ]; then
		set +e; check=$(git branch --no-color --contain origin/master_ext | grep -e " master_ext$" 2>&1); set -e
	fi
	echo "check='${check}'"
	if [ "${check}" = "" ]; then
		git remote set-url origin https://projextrdr@localhost:6443/hgit/module2
		git push -u -f origin master_ext
		git remote set-url origin https://projusr2@localhost:6443/hgit/module2
	fi

	check=""
	if [ -e .git/refs/remotes/origin/master ]; then
		set +e; check=$(git branch --no-color --contain origin/master | grep -e " master$" 2>&1); set -e
	fi
	if [ "${check}" = "" ]; then
		echo "push master"
		git remote set-url origin https://projextrdr@localhost:6443/hgit/module2
		git push -u -f origin master
		git remote set-url origin https://projusr2@localhost:6443/hgit/module2
	fi

}
